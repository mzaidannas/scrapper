# syntax = docker/dockerfile:1

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.4.1
FROM docker.io/library/ruby:$RUBY_VERSION-alpine AS base

# Rails app lives here
WORKDIR /rails

# Set production environment
ENV RAILS_ENV="production" \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT="development:test"

FROM base AS bundler
RUN apk add --update --no-cache binutils build-base libxml2-dev libxslt-dev curl-dev ruby-dev postgresql-dev git shared-mime-info
RUN gem update --system --no-document
# Install application gems
COPY Gemfile Gemfile.lock .ruby-version ./
RUN gem install bundler:$(cat Gemfile.lock | tail -1 | tr -d " ") --no-doc
RUN bundle config build.nokogiri --use-system-libraries
RUN MAKE="make -j $(nproc)" bundle install --retry 5 -j "$(nproc)"
RUN find /usr/local/bundle -path */gems/*.o -delete &&\
    find /usr/local/bundle -path */gems/*.c -delete
RUN rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git
RUN bundle exec bootsnap precompile --gemfile

FROM base AS assets
RUN apk add --update --no-cache libpq tzdata
COPY --from=oven/bun:alpine --chown=user:group /usr/local/bin/bun /usr/local/bin/bun
COPY --from=bundler /usr/local/bundle /usr/local/bundle
COPY app/assets app/assets
COPY app/javascript app/javascript
COPY package.json bun.lock bun.config.js ./
RUN bun install
RUN bun bun.config.js
# Copy application code
COPY . .
# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/
RUN --mount=type=secret,id=rails_master_key,env=RAILS_MASTER_KEY \
    RAILS_ENV=production \
    bundle exec rails assets:precompile

FROM base AS app
RUN apk add --update --no-cache tini libxml2 libcurl libxslt postgresql-libs libpq libc6-compat shared-mime-info tzdata
COPY --from=bundler /usr/local/bundle /usr/local/bundle
COPY --from=assets /rails/public/assets public/assets
COPY --from=assets /rails /rails
# Create non-root user
ARG UID=1000
ARG GID=1000
RUN addgroup -g $GID appgroup
RUN adduser -u $UID -G appgroup -D appuser -h /home/appuser --shell /bin/sh
RUN mkdir -p -m 0700 /run/user/${UID} \
    && chown appuser:appgroup /run/user/${UID}
ENV XDG_RUNTIME_DIR=/run/user/${UID}
RUN apk add libcap
RUN setcap cap_net_bind_service=+ep /usr/local/bin/ruby
RUN chown -R appuser:appgroup /rails
USER appuser
ENV RAILS_ENV="production"
EXPOSE 3000
ENTRYPOINT ["/sbin/tini", "--"]
CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]
